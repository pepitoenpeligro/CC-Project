# docker-compose build cloudbanking-core
# docker-compose up

version: "3"
services:
  # Main Microservice. That expose /api
  cloudbanking-core:
    # Name of container to create
    container_name: cloudbanking-core
    image: pepitoenpeligro/cloudbanking-core
    # The file is in . and the dockerfile is Dockerfile.core
    # build:
    #   context: .
    #   dockerfile: Dockerfile.core
    # Exposing port 3030
    ports:
      - "3030:3030"
    depends_on:
      - cloudbanking-account
      - cloudbanking-card
      - cloudbanking-funds

    # Creating a network. It will be useful for connecting
    # multiple microservices here
    networks:
      - proxynet
    extra_hosts:
      # To comunicate host with docker container
      - "host.docker.internal:host-gateway"

  cloudbanking-account:
    container_name: cloudbanking-account
    image: pepitoenpeligro/cloudbanking-account
    # build:
    #   context: .
    #   dockerfile: Dockerfile.account
    ports:
      - "3031:3031"
    networks:
      - proxynet
    extra_hosts:
      - "host.docker.internal:host-gateway"

  cloudbanking-card:
    container_name: cloudbanking-card
    image: pepitoenpeligro/cloudbanking-card
    # build:
    #   context: ./card
    #   dockerfile: Dockerfile.cards
    ports:
      - "3032:3032"
    networks:
      - proxynet
    extra_hosts:
      - "host.docker.internal:host-gateway"

  cloudbanking-funds:
    container_name: cloudbanking-funds
    image: pepitoenpeligro/cloudbanking-funds
    ports:
      - 3033:3033
    networks:
      - proxynet
      # - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  cloudbanking-loans:
    container_name: cloudbanking-loans
    build:
      context: ./loans
      dockerfile: loans.Dockerfile
    ports:
      - "3034:3034"
    networks:
      - proxynet
    extra_hosts:
      - "host.docker.internal:host-gateway"


  database:
    image: mongo:3.2
    container_name: mongo
    restart: unless-stopped
    env_file: .env
    environment:
      MONGODB_USER: pepito
      MONGODB_PASS: pepitopass
      MONGO_INITDB_ROOT_USERNAME: pepito
      MONGO_INITDB_ROOT_PASSWORD: pepitopass
      MONGODB_DATABASE: loans
      MONGODB_PORT_NUMBER: 27017
    ports:
      - "27017:27017"
    # volumes:
    #   - ./:/data/db
    networks:
      - proxynet
    extra_hosts:
      - "host.docker.internal:host-gateway"


  nginx:
      image: nginx:alpine
      ports:
        - 80:80
        - 443:443
      volumes:
        - $PWD/conf/nginx.conf:/etc/nginx/conf.d/default.conf
        - ./data/certbot/conf:/etc/letsencrypt
        - ./data/certbot/www:/var/www/certbot
        - /etc/letsencrypt/live/pepecordoba.site/fullchain.pem:/etc/letsencrypt/live/pepecordoba.site/fullchain.pem
        - /etc/letsencrypt/live/pepecordoba.site/privkey.pem:/etc/letsencrypt/live/pepecordoba.site/privkey.pem
      depends_on:
        - cloudbanking-core
      networks:
        - proxynet
      extra_hosts:
        - "host.docker.internal:host-gateway"
      command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  proxynet:
    name: custom_network
  app-network:
    driver: bridge